/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 04 07:37:44 GMT 2020
 */

package array;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import array.Rotate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Rotate_ESTest extends Rotate_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Rotate rotate0 = new Rotate();
      int[] intArray0 = new int[2];
      int int0 = 1487;
      intArray0[0] = 1487;
      intArray0[1] = (-1137);
      rotate0.rotate(intArray0, intArray0[0]);
      int int1 = 2;
      rotate0.rotate(intArray0, int1);
      rotate0.rotate(intArray0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Rotate rotate0 = new Rotate();
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = (-1022);
      intArray0[3] = (-1916);
      intArray0[4] = 1783;
      intArray0[5] = 1171;
      intArray0[6] = 567;
      intArray0[7] = (-2257);
      intArray0[8] = 0;
      rotate0.rotate(intArray0, (-393));
      int[] intArray1 = new int[8];
      intArray1[0] = 0;
      intArray1[1] = (-1022);
      intArray1[2] = 0;
      intArray1[3] = 1783;
      intArray1[4] = 0;
      intArray1[5] = (-1022);
      intArray1[6] = (-1022);
      intArray1[7] = 1783;
      rotate0.rotate(intArray1, (-393));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Rotate rotate0 = new Rotate();
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = (-2273);
      intArray0[3] = 1813;
      intArray0[4] = (-1925);
      intArray0[5] = 737;
      intArray0[6] = 0;
      intArray0[7] = 0;
      int[] intArray1 = rotate0.rotate(intArray0, (-2273));
      rotate0.rotate(intArray0, 0);
      rotate0.rotate(intArray0, (-2273));
      rotate0.rotate(intArray1, 0);
      rotate0.rotate(intArray0, 154);
      rotate0.rotate(intArray0, 116);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Rotate rotate0 = new Rotate();
      int[] intArray0 = new int[4];
      intArray0[0] = 1;
      intArray0[1] = 1390;
      intArray0[2] = (-3640);
      intArray0[3] = 0;
      int[] intArray1 = rotate0.rotate(intArray0, 0);
      int[] intArray2 = rotate0.rotate(intArray1, 1);
      rotate0.rotate(intArray2, 0);
      int[] intArray3 = rotate0.rotate(intArray1, 0);
      int[] intArray4 = rotate0.rotate(intArray1, (-1122));
      int int0 = 3763;
      rotate0.rotate(intArray4, int0);
      int int1 = (-1824);
      int[] intArray5 = rotate0.rotate(intArray3, int1);
      rotate0.rotate(intArray5, intArray0[3]);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Rotate rotate0 = new Rotate();
      int[] intArray0 = new int[8];
      intArray0[0] = (-1213);
      intArray0[1] = 2;
      intArray0[2] = 65;
      intArray0[3] = 0;
      int int0 = 572;
      intArray0[4] = 572;
      intArray0[5] = 0;
      intArray0[6] = 925;
      intArray0[7] = 0;
      int[] intArray1 = rotate0.rotate(intArray0, int0);
      int int1 = 1591;
      int[] intArray2 = rotate0.rotate(intArray1, int1);
      rotate0.rotate(intArray0, int1);
      int[] intArray3 = rotate0.rotate(intArray2, intArray0[7]);
      rotate0.rotate(intArray3, intArray0[3]);
      int[] intArray4 = new int[2];
      intArray4[0] = int1;
      intArray4[1] = int1;
      int int2 = 0;
      rotate0.rotate(intArray4, int2);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Rotate rotate0 = new Rotate();
      int[] intArray0 = new int[0];
      rotate0.rotate(intArray0, 1382);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Rotate rotate0 = new Rotate();
      int[] intArray0 = new int[8];
      intArray0[0] = 2429;
      intArray0[1] = 182;
      intArray0[2] = 0;
      intArray0[3] = (-1497);
      intArray0[4] = 0;
      intArray0[5] = (-1971);
      intArray0[6] = 3884;
      intArray0[7] = 2030;
      int[] intArray1 = rotate0.rotate(intArray0, (-1497));
      rotate0.rotate(intArray0, (-1497));
      int[] intArray2 = new int[6];
      intArray2[0] = 3884;
      intArray2[1] = 2429;
      intArray2[2] = 182;
      intArray2[3] = 3884;
      intArray2[4] = 3884;
      intArray2[5] = (-1497);
      int int0 = 816;
      rotate0.rotate(intArray2, int0);
      int int1 = 0;
      rotate0.rotate(intArray1, int1);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Rotate rotate0 = new Rotate();
      int int0 = 4372;
      // Undeclared exception!
      try { 
        rotate0.rotate((int[]) null, 4372);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Rotate rotate0 = new Rotate();
      rotate0.rotate((int[]) null, 0);
      rotate0.rotate((int[]) null, 0);
      rotate0.rotate((int[]) null, 0);
      rotate0.rotate((int[]) null, 0);
      rotate0.rotate((int[]) null, 0);
      rotate0.rotate((int[]) null, 0);
      rotate0.rotate((int[]) null, 0);
      rotate0.rotate((int[]) null, (-1));
      // Undeclared exception!
      try { 
        rotate0.rotate((int[]) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
