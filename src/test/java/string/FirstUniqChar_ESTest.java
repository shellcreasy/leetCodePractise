/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 04 07:40:25 GMT 2020
 */

package string;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import string.FirstUniqChar;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FirstUniqChar_ESTest extends FirstUniqChar_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FirstUniqChar firstUniqChar0 = new FirstUniqChar();
      int int0 = firstUniqChar0.firstUniqChar("TY=");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FirstUniqChar firstUniqChar0 = new FirstUniqChar();
      // Undeclared exception!
      try { 
        firstUniqChar0.firstUniqChar((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("string.FirstUniqChar", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FirstUniqChar firstUniqChar0 = new FirstUniqChar();
      int int0 = firstUniqChar0.firstUniqChar("string.FirstUniqChar");
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FirstUniqChar firstUniqChar0 = new FirstUniqChar();
      int int0 = firstUniqChar0.firstUniqChar("");
      assertEquals((-1), int0);
  }
}
