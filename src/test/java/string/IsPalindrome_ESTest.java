/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 04 07:39:57 GMT 2020
 */

package string;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import string.IsPalindrome;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IsPalindrome_ESTest extends IsPalindrome_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IsPalindrome isPalindrome0 = new IsPalindrome();
      // Undeclared exception!
      try { 
        isPalindrome0.isPalindrome((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("string.IsPalindrome", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IsPalindrome isPalindrome0 = new IsPalindrome();
      boolean boolean0 = isPalindrome0.isPalindrome("Wx");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IsPalindrome isPalindrome0 = new IsPalindrome();
      boolean boolean0 = isPalindrome0.isPalindrome("($");
      assertTrue(boolean0);
  }
}
